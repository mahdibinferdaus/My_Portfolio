name: Deploy Vercel Preview on PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect modified folder under /Sites/
        id: site
        run: |
          git fetch origin main
          folder=$(git diff --name-only origin/main...HEAD | grep '^Sites/' | cut -d/ -f2 | sort | uniq | head -n 1)
          echo "Detected folder: $folder"
          echo "folder=$folder" >> $GITHUB_OUTPUT

      - name: Fail if no folder found
        run: |
          if [ -z "${{ steps.site.outputs.folder }}" ]; then
            echo "❌ No folder found under /Sites/. Exiting."
            exit 1
          fi

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: Sites/${{ steps.site.outputs.folder }}
        run: npm install

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel environment
        working-directory: Sites/${{ steps.site.outputs.folder }}
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build the project
        working-directory: Sites/${{ steps.site.outputs.folder }}
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        working-directory: Sites/${{ steps.site.outputs.folder }}
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT

      - name: Comment preview link on PR
        uses: actions/github-script@v7
        with:
          script: |
            const url = "${{ steps.deploy.outputs.url }}";
            const folder = "${{ steps.site.outputs.folder }}";
            const body = `🚀 **Preview ready** for \`/Sites/${folder}\` → [View Preview](${url})`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body,
            });
